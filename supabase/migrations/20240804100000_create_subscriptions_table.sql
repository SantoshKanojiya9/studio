
-- Subscriptions Table
CREATE TABLE subscriptions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    -- The user who is subscribing
    subscriber_id UUID NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
    -- The user who is being subscribed to
    subscribee_id UUID NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
    CONSTRAINT unique_subscription UNIQUE (subscriber_id, subscribee_id)
);

-- Enable Row Level Security
ALTER TABLE subscriptions ENABLE ROW LEVEL SECURITY;

-- Policies for subscriptions
-- Users can see all subscriptions
CREATE POLICY "Allow all users to view subscriptions"
ON public.subscriptions
FOR SELECT
USING (true);

-- Users can only insert subscriptions where they are the subscriber
CREATE POLICY "Allow users to create their own subscriptions"
ON public.subscriptions
FOR INSERT
WITH CHECK (auth.uid() = subscriber_id);

-- Users can only delete their own subscriptions
CREATE POLICY "Allow users to delete their own subscriptions"
ON public.subscriptions
FOR DELETE
USING (auth.uid() = subscriber_id);

-- Create an index for faster lookups on subscribee_id to count subscribers
CREATE INDEX idx_subscribee_id ON subscriptions(subscribee_id);
